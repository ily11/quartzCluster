apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url "http://nexus.buptnsrc.com/content/repositories/thirdparty" }
        maven { url "http://nexus.buptnsrc.com/content/groups/public" }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.5.1'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.10.1'
    }
}
apply plugin: 'org.asciidoctor.convert'
group 'bupt'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://nexus.buptnsrc.com/content/groups/public'
//        url "http://nexus.buptnsrc.com/content/repositories/thirdparty/"
    }
}

dependencies {
    def springframeworkVersion = '4.3.7.RELEASE'
    def springSecurityVersion = '4.2.1.RELEASE'
    def typeSafeVersion = '1.3.1'
    def logbackVersion = '1.2.1'
    def groovyVersion = '2.4.9'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'
    compile "com.typesafe:config:${typeSafeVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-access:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    //spring4
    compile "org.springframework:spring-test:${springframeworkVersion}"
    compile "org.springframework:spring-context:${springframeworkVersion}"
    compile "org.springframework:spring-context-support:${springframeworkVersion}"
    compile "org.springframework:spring-tx:${springframeworkVersion}"
    compile "org.springframework:spring-webmvc:${springframeworkVersion}"
    compile "org.springframework:spring-jdbc:${springframeworkVersion}"
    compile "org.springframework.security:spring-security-taglibs:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-cas:${springSecurityVersion}"
    compile 'redis.clients:jedis:2.7.2'
//    compile 'com.buptnsrc.secana:dao:1.1.6-RELEASE'
    compile 'redis.clients:jedis:2.7.2'
    //mysql connect
    compile group: 'mysql', name: 'mysql-connector-java', version: '6.0.6'
    compile "org.quartz-scheduler:quartz:2.2.3"
    compile('com.buptnsrc.appsec.incubator:utils:1.4.26-RELEASE') {
        //其中transitive配置为 true，让 Gradle 自动处理其子依赖
        //transitive = true
        exclude group: 'analyze-framework', module: 'soot-trunk'
    }
//    compile 'com.buptnsrc.mobilesecurity:reportergenutils:1.0.4'
    testCompile 'junit:junit:4.12'
    testCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
}
// add configuration for pom signing
configurations {
    all*.exclude group: 'analyze-framework', module: 'soot-trunk'
    pom
}

// create a run task in development
task debugRun(type:JavaExec){
    classpath = sourceSets.main.runtimeClasspath
    main = "com.bupt.MainProgram"
    jvmArgs("-Dconfig.file=${project.projectDir}/conf/application.conf")
    jvmArgs("-Dlogback.configurationFile=${project.projectDir}/conf/logback.groovy")
}

mainClassName = "com.bupt.MainProgram"
applicationDefaultJvmArgs = ["-Duser.dir=MY_APP_HOME",
                             "-Dconfig.file=MY_APP_HOME/conf/application.conf",
                             "-Dlogback.configurationFile=MY_APP_HOME/conf/logback.groovy"]
startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('MY_APP_HOME', '\$APP_HOME')
        windowsScript.text = windowsScript.text.replace('MY_APP_HOME', '%~dp0..')

    }
}

